{"version":3,"file":"index.mjs","sources":["../lib/median.js","../lib/validate.js","../lib/print.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math-base-special-floor' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Computes the median of an array.\n*\n* @param {Array} arr - input array\n* @returns {number} median value\n*/\nfunction median( arr ) {\n\tvar len = arr.length;\n\tvar id;\n\tvar d;\n\tvar i;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\n\t// Copy and sort data in ascending order:\n\td = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\td.push( arr[ i ] );\n\t}\n\td.sort( ascending );\n\n\t// Get the middle index:\n\tid = floor( len / 2 );\n\n\tif ( len % 2 ) {\n\t\t// The number of elements is not evenly divisible by two, hence we have a middle index:\n\t\treturn d[ id ];\n\t}\n\t// Even number of elements, so must take the mean of the two middle values:\n\treturn ( d[ id-1 ] + d[ id ] ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = median;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isnan = require( '@stdlib/assert-is-nan' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar roundn = require( '@stdlib/math-base-special-roundn' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options has to be simple object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an options object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: The variances in all groups are the same.';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + roundn( this.df, -dgts );\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar qnorm = require( '@stdlib/stats-base-dists-normal-quantile' );\nvar chisqCDF = require( '@stdlib/stats-base-dists-chisquare-cdf' );\nvar group = require( '@stdlib/utils-group' );\nvar ranks = require( '@stdlib/stats-ranks' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar indexOf = require( '@stdlib/utils-index-of' );\nvar format = require( '@stdlib/string-format' );\nvar median = require( './median.js' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// FUNCTIONS //\n\n/**\n* Returns an array of a chosen length filled with the supplied value.\n*\n* @private\n* @param {*} val - value to repeat\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*/\nfunction repeat( val, len ) {\n\tvar out = new Array( len );\n\tvar i;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = val;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Computes the Fligner-Killeen test for equal variances.\n*\n* @param {...NumericArray} arguments - either two or more number arrays or a single numeric array if an array of group indicators is supplied as an option\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {TypeError} must provide array-like arguments\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {Error} must provide at least two array-like arguments if `groups` is not set\n* @throws {TypeError} options has to be simple object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = fligner( x, y, z );\n* // returns {...}\n*/\nfunction fligner() {\n\tvar variance;\n\tvar options;\n\tvar ngroups;\n\tvar levels;\n\tvar groups;\n\tvar scores;\n\tvar table;\n\tvar alpha;\n\tvar delta;\n\tvar args;\n\tvar mean;\n\tvar opts;\n\tvar pval;\n\tvar sums;\n\tvar xabs;\n\tvar stat;\n\tvar err;\n\tvar loc;\n\tvar out;\n\tvar df;\n\tvar M2;\n\tvar a;\n\tvar n;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\targs = [];\n\tngroups = arguments.length;\n\topts = {};\n\tif ( isPlainObject( arguments[ ngroups - 1 ] ) ) {\n\t\toptions = arguments[ ngroups - 1 ];\n\t\tngroups -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.groups ) {\n\t\tgroups = opts.groups;\n\t\ttable = group( arguments[ 0 ], groups );\n\t\tlevels = objectKeys( table );\n\t\tngroups = levels.length;\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid number of groups. `%s` array must contain at least two unique elements. Value: `%s`.', 'groups', levels ) );\n\t\t}\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( table[ levels[ i ] ] );\n\t\t}\n\t} else {\n\t\tgroups = [];\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t\tgroups = groups.concat( repeat( i, arguments[ i ].length ) );\n\t\t}\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `%f`.', alpha ) );\n\t}\n\tx = [];\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tif ( !isCollection( args[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide array-like arguments. Value: `%s`.', args[ i ] ) );\n\t\t}\n\t\tif ( args[ i ].length === 0 ) {\n\t\t\tthrow new Error( format( 'invalid argument. Supplied arrays cannot be empty. Value: `%s`.', args[ i ] ) );\n\t\t}\n\t\tloc = median( args[ i ] );\n\t\tfor ( j = 0; j < args[ i ].length; j++ ) {\n\t\t\targs[ i ][ j ] -= loc;\n\t\t}\n\t\tx = x.concat( args[ i ] );\n\t}\n\tn = x.length;\n\txabs = new Array( n );\n\tfor ( i = 0; i < n; i++ ) {\n\t\txabs[ i ] = abs( x[ i ] );\n\t}\n\tscores = ranks( xabs );\n\ta = new Array( n );\n\tmean = 0.0;\n\tM2 = 0.0;\n\tsums = repeat( 0.0, ngroups );\n\tfor ( i = 0; i < n; i++ ) {\n\t\ta[ i ] = qnorm( ( 1.0 + ( scores[ i ]/(n+1) ) ) / 2.0, 0.0, 1.0 );\n\t\tsums[ ( levels ) ? indexOf( levels, groups[i] ) : groups[i] ] += a[ i ];\n\t\tdelta = a[ i ] - mean;\n\t\tmean += delta / ( i+1 );\n\t\tM2 += delta * ( a[ i ] - mean );\n\t}\n\tvariance = M2 / ( n - 1 );\n\tstat = 0.0;\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tstat += pow( sums[ i ], 2 ) / args[ i ].length;\n\t}\n\tstat = ( stat - ( n * pow( mean, 2 ) ) ) / variance;\n\tdf = ngroups - 1;\n\tpval = 1.0 - chisqCDF( stat, df );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'method', 'Fligner-Killeen test of homogeneity of variances' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fligner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the Fligner-Killeen test for equal variances.\n*\n* @module @stdlib/stats-fligner-test\n*\n* @example\n* var flignerTest = require( '@stdlib/stats-fligner-test' );\n*\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = flignerTest( x, y, z );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar flignerTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = flignerTest;\n"],"names":["floor","require$$0","ascending","a","b","median_1","arr","id","d","i","len","length","push","sort","isArray","isNumber","require$$1","isPrimitive","isObject","require$$2","isnan","require$$3","hasOwnProp","require$$4","format","require$$5","validate_1","opts","options","alpha","TypeError","groups","isPositiveInteger","isBoolean","roundn","isCollection","isPlainObject","setReadOnly","objectKeys","qnorm","chisqCDF","group","require$$6","ranks","require$$7","abs","require$$8","pow","require$$9","indexOf","require$$10","require$$11","median","require$$12","validate","require$$13","print","decision","dgts","str","arguments","digits","this","method","pValue","statistic","df","rejected","repeat","val","out","Array","lib","variance","ngroups","levels","scores","table","delta","args","mean","pval","sums","xabs","stat","err","loc","M2","n","x","j","Error","concat","RangeError"],"mappings":"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"}