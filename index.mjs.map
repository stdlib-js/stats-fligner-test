{"version":3,"file":"index.mjs","sources":["../lib/median.js","../lib/validate.js","../lib/print.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor';\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Computes the median of an array.\n*\n* @param {Array} arr - input array\n* @returns {number} median value\n*/\nfunction median( arr ) {\n\tvar len = arr.length;\n\tvar id;\n\tvar d;\n\tvar i;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\n\t// Copy and sort data in ascending order:\n\td = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\td.push( arr[ i ] );\n\t}\n\td.sort( ascending );\n\n\t// Get the middle index:\n\tid = floor( len / 2 );\n\n\tif ( len % 2 ) {\n\t\t// The number of elements is not evenly divisible by two, hence we have a middle index:\n\t\treturn d[ id ];\n\t}\n\t// Even number of elements, so must take the mean of the two middle values:\n\treturn ( d[ id-1 ] + d[ id ] ) / 2.0;\n}\n\n\n// EXPORTS //\n\nexport default median;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array';\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport isnan from '@stdlib/assert-is-nan';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '1H32V,FD', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( '1H38P,GU', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( '1H38Z,GX', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport roundn from '@stdlib/math-base-special-roundn';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '1H33L,Gc', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( '1H33P,Fv', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( '1H32o,GE', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: The variances in all groups are the same.';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + roundn( this.df, -dgts );\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert-is-collection';\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\nimport objectKeys from '@stdlib/utils-keys';\nimport qnorm from '@stdlib/stats-base-dists-normal-quantile';\nimport chisqCDF from '@stdlib/stats-base-dists-chisquare-cdf';\nimport group from '@stdlib/utils-group';\nimport ranks from '@stdlib/stats-ranks';\nimport abs from '@stdlib/math-base-special-abs';\nimport pow from '@stdlib/math-base-special-pow';\nimport indexOf from '@stdlib/utils-index-of';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport median from './median.js';\nimport validate from './validate.js';\nimport print from './print.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// FUNCTIONS //\n\n/**\n* Returns an array of a chosen length filled with the supplied value.\n*\n* @private\n* @param {*} val - value to repeat\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*/\nfunction repeat( val, len ) {\n\tvar out = new Array( len );\n\tvar i;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = val;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Computes the Fligner-Killeen test for equal variances.\n*\n* @param {...NumericArray} arguments - either two or more number arrays or a single numeric array if an array of group indicators is supplied as an option\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {TypeError} must provide array-like arguments\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {Error} must provide at least two array-like arguments if `groups` is not set\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = fligner( x, y, z );\n* // returns {...}\n*/\nfunction fligner() {\n\tvar variance;\n\tvar options;\n\tvar ngroups;\n\tvar levels;\n\tvar groups;\n\tvar scores;\n\tvar table;\n\tvar alpha;\n\tvar delta;\n\tvar args;\n\tvar mean;\n\tvar opts;\n\tvar pval;\n\tvar sums;\n\tvar xabs;\n\tvar stat;\n\tvar err;\n\tvar loc;\n\tvar out;\n\tvar df;\n\tvar M2;\n\tvar a;\n\tvar n;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\targs = [];\n\tngroups = arguments.length;\n\topts = {};\n\tif ( isPlainObject( arguments[ ngroups - 1 ] ) ) {\n\t\toptions = arguments[ ngroups - 1 ];\n\t\tngroups -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.groups ) {\n\t\tgroups = opts.groups;\n\t\ttable = group( arguments[ 0 ], groups );\n\t\tlevels = objectKeys( table );\n\t\tngroups = levels.length;\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( '1H38W,GY', 'groups', levels ) );\n\t\t}\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( table[ levels[ i ] ] );\n\t\t}\n\t} else {\n\t\tgroups = [];\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t\tgroups = groups.concat( repeat( i, arguments[ i ].length ) );\n\t\t}\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( '1H38V,Gb', 'alpha', alpha ) );\n\t}\n\tx = [];\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tif ( !isCollection( args[ i ] ) ) {\n\t\t\tthrow new TypeError( format( '1H38X,GZ', args[ i ] ) );\n\t\t}\n\t\tif ( args[ i ].length === 0 ) {\n\t\t\tthrow new Error( format( '1H38Y,Ga', args[ i ] ) );\n\t\t}\n\t\tloc = median( args[ i ] );\n\t\tfor ( j = 0; j < args[ i ].length; j++ ) {\n\t\t\targs[ i ][ j ] -= loc;\n\t\t}\n\t\tx = x.concat( args[ i ] );\n\t}\n\tn = x.length;\n\txabs = new Array( n );\n\tfor ( i = 0; i < n; i++ ) {\n\t\txabs[ i ] = abs( x[ i ] );\n\t}\n\tscores = ranks( xabs );\n\ta = new Array( n );\n\tmean = 0.0;\n\tM2 = 0.0;\n\tsums = repeat( 0.0, ngroups );\n\tfor ( i = 0; i < n; i++ ) {\n\t\ta[ i ] = qnorm( ( 1.0 + ( scores[ i ]/(n+1) ) ) / 2.0, 0.0, 1.0 );\n\t\tsums[ ( levels ) ? indexOf( levels, groups[i] ) : groups[i] ] += a[ i ];\n\t\tdelta = a[ i ] - mean;\n\t\tmean += delta / ( i+1 );\n\t\tM2 += delta * ( a[ i ] - mean );\n\t}\n\tvariance = M2 / ( n - 1 );\n\tstat = 0.0;\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tstat += pow( sums[ i ], 2 ) / args[ i ].length;\n\t}\n\tstat = ( stat - ( n * pow( mean, 2 ) ) ) / variance;\n\tdf = ngroups - 1;\n\tpval = 1.0 - chisqCDF( stat, df );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'method', 'Fligner-Killeen test of homogeneity of variances' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fligner;\n"],"names":["ascending","a","b","median","arr","id","d","i","len","length","push","sort","floor","validate","opts","options","isObject","hasOwnProp","alpha","isNumber","isnan","TypeError","format","groups","isArray","print","decision","dgts","str","arguments","isPositiveInteger","digits","isBoolean","this","method","roundn","pValue","statistic","df","rejected","repeat","val","out","Array","fligner","variance","ngroups","levels","scores","table","delta","args","mean","pval","sums","xabs","stat","err","loc","M2","n","x","j","isPlainObject","group","objectKeys","Error","concat","RangeError","isCollection","abs","ranks","qnorm","indexOf","pow","chisqCDF","setReadOnly"],"mappings":"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"}