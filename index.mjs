// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-quantile@v0.2.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-group@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-ranks@v0.2.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.2.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.2.0-esm/index.mjs";import{isPrimitive as j}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.2.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.2.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.2.0-esm/index.mjs";import{isPrimitive as g}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.0-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.2.0-esm/index.mjs";function w(t,s){return t-s}function x(t){var s,e,i,n=t.length;if(!n)return null;for(e=[],i=0;i<n;i++)e.push(t[i]);return e.sort(w),s=h(n/2),n%2?e[s]:(e[s-1]+e[s])/2}function y(t,e){return s(e)?f(e,"alpha")&&(t.alpha=e.alpha,!j(t.alpha)||v(t.alpha))?new TypeError(m("invalid option. `%s` option must be a number. Option: `%s`.","alpha",t.alpha)):f(e,"groups")&&(t.groups=e.groups,!u(t.groups))?new TypeError(m("invalid option. `%s` option must be an array. Option: `%s`.","groups",t.groups)):null:new TypeError(m("invalid argument. Options argument must be an object. Value: `%s`.",e))}function E(t){var e,i,n;if(i=4,e=!0,arguments.length>0){if(!s(t))throw new TypeError(m("invalid argument. First argument must be an object. Value: `%s`.",t));if(f(t,"digits")){if(!c(t.digits))throw new TypeError(m("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",t.digits));i=t.digits}if(f(t,"decision")){if(!g(t.decision))throw new TypeError(m("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",t.decision));e=t.decision}}return n="",n+=this.method,n+="\n\n",n+="Null hypothesis: The variances in all groups are the same.",n+="\n\n",n+="    pValue: "+b(this.pValue,-i)+"\n",n+="    statistic: "+b(this.statistic,-i)+"\n",n+="    df: "+b(this.df,-i),n+="\n\n",e&&(n+="Test Decision: ",this.rejected?n+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":n+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",n+="\n"),n}function T(t,s){var e,i=new Array(s);for(e=0;e<s;e++)i[e]=t;return i}function O(){var h,u,j,v,f,c,g,b,w,O,V,k,q,A,F,R,D,K,M,N,P,S,z,B,C,G;if(O=[],k={},s(arguments[(j=arguments.length)-1])&&(u=arguments[j-1],j-=1,D=y(k,u)))throw D;if(k.groups){if(f=k.groups,g=o(arguments[0],f),(j=(v=i(g)).length)<2)throw new Error(m("invalid option. `%s` option must be an array containing at least two unique elements. Option: `%s`.","groups",v));for(C=0;C<j;C++)O.push(g[v[C]])}else for(f=[],C=0;C<j;C++)O.push(arguments[C]),f=f.concat(T(C,arguments[C].length));if((b=void 0===k.alpha?.05:k.alpha)<0||b>1)throw new RangeError(m("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",b));for(B=[],C=0;C<j;C++){if(!t(O[C]))throw new TypeError(m("invalid argument. Must provide array-like arguments. Value: `%s`.",O[C]));if(0===O[C].length)throw new Error(m("invalid argument. Supplied arrays cannot be empty. Value: `%s`.",O[C]));for(K=x(O[C]),G=0;G<O[C].length;G++)O[C][G]-=K;B=B.concat(O[C])}for(z=B.length,F=new Array(z),C=0;C<z;C++)F[C]=l(B[C]);for(c=a(F),S=new Array(z),V=0,P=0,A=T(0,j),C=0;C<z;C++)S[C]=n((1+c[C]/(z+1))/2,0,1),A[v?p(v,f[C]):f[C]]+=S[C],V+=(w=S[C]-V)/(C+1),P+=w*(S[C]-V);for(h=P/(z-1),R=0,C=0;C<j;C++)R+=d(A[C],2)/O[C].length;return R=(R-z*d(V,2))/h,q=1-r(R,N=j-1),e(M={},"rejected",q<=b),e(M,"alpha",b),e(M,"pValue",q),e(M,"statistic",R),e(M,"df",N),e(M,"method","Fligner-Killeen test of homogeneity of variances"),e(M,"print",E),M}export{O as default};
//# sourceMappingURL=index.mjs.map
