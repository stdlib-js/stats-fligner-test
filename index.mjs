// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-quantile@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-group@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-ranks@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var w=h;function x(s,t){return s-t}var y=function(s){var t,e,i,r=s.length;if(!r)return null;for(e=[],i=0;i<r;i++)e.push(s[i]);return e.sort(x),t=w(r/2),r%2?e[t]:(e[t-1]+e[t])/2},E=u,T=f.isPrimitive,V=t,O=j,k=g,q=p;var A=function(s,t){return V(t)?k(t,"alpha")&&(s.alpha=t.alpha,!T(s.alpha)||O(s.alpha))?new TypeError(q("invalid option. `%s` option must be a number. Option: `%s`.","alpha",s.alpha)):k(t,"groups")&&(s.groups=t.groups,!E(s.groups))?new TypeError(q("invalid option. `%s` option must be an array. Option: `%s`.","groups",s.groups)):null:new TypeError(q("invalid argument. Options argument must be an object. Value: `%s`.",t))},F=c,P=t,R=v.isPrimitive,D=g,K=b,M=p;var N=s,S=t,z=e,B=i,C=r,G=n,H=o,I=a,J=l,L=d,Q=m,U=p,W=y,X=A,Y=function(s){var t,e,i;if(e=4,t=!0,arguments.length>0){if(!P(s))throw new TypeError(M("invalid argument. First argument must be an options object. Value: `%s`.",s));if(D(s,"digits")){if(!F(s.digits))throw new TypeError(M("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",s.digits));e=s.digits}if(D(s,"decision")){if(!R(s.decision))throw new TypeError(M("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",s.decision));t=s.decision}}return i="",i+=this.method,i+="\n\n",i+="Null hypothesis: The variances in all groups are the same.",i+="\n\n",i+="    pValue: "+K(this.pValue,-e)+"\n",i+="    statistic: "+K(this.statistic,-e)+"\n",i+="    df: "+K(this.df,-e),i+="\n\n",t&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i};function Z(s,t){var e,i=new Array(t);for(e=0;e<t;e++)i[e]=s;return i}var $=function(){var s,t,e,i,r,n,o,a,l,d,m,p,h,u,f,j,g,c,v,b,w,x,y,E,T,V;if(d=[],p={},S(arguments[(e=arguments.length)-1])&&(t=arguments[e-1],e-=1,g=X(p,t)))throw g;if(p.groups){if(r=p.groups,o=H(arguments[0],r),(e=(i=B(o)).length)<2)throw new Error(U("invalid number of groups. `%s` array must contain at least two unique elements. Value: `%s`.","groups",i));for(T=0;T<e;T++)d.push(o[i[T]])}else for(r=[],T=0;T<e;T++)d.push(arguments[T]),r=r.concat(Z(T,arguments[T].length));if((a=void 0===p.alpha?.05:p.alpha)<0||a>1)throw new RangeError(U("invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `%f`.",a));for(E=[],T=0;T<e;T++){if(!N(d[T]))throw new TypeError(U("invalid argument. Must provide array-like arguments. Value: `%s`.",d[T]));if(0===d[T].length)throw new Error(U("invalid argument. Supplied arrays cannot be empty. Value: `%s`.",d[T]));for(c=W(d[T]),V=0;V<d[T].length;V++)d[T][V]-=c;E=E.concat(d[T])}for(y=E.length,f=new Array(y),T=0;T<y;T++)f[T]=J(E[T]);for(n=I(f),x=new Array(y),m=0,w=0,u=Z(0,e),T=0;T<y;T++)x[T]=C((1+n[T]/(y+1))/2,0,1),u[i?Q(i,r[T]):r[T]]+=x[T],m+=(l=x[T]-m)/(T+1),w+=l*(x[T]-m);for(s=w/(y-1),j=0,T=0;T<e;T++)j+=L(u[T],2)/d[T].length;return j=(j-y*L(m,2))/s,h=1-G(j,b=e-1),z(v={},"rejected",h<=a),z(v,"alpha",a),z(v,"pValue",h),z(v,"statistic",j),z(v,"df",b),z(v,"method","Fligner-Killeen test of homogeneity of variances"),z(v,"print",Y),v};export{$ as default};
//# sourceMappingURL=index.mjs.map
